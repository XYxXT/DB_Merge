<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wNOqs6wdshQ1gAAAABJRU5ErkJggg==
</value>
  </data>
</root>